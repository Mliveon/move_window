#!/usr/bin/osascript -l JavaScript
// vim:ft=javascript:

ObjC.import('AppKit');

// Returns the screen boundaries.
function getWindowFrame(screenIndex) {
  var frame = $.NSScreen.screens.objectAtIndex(screenIndex).visibleFrame;
  return frame;
}

// Returns the name of the frontMost Application, i.e. 'iTerm' or 'Finder'.
function getFrontmostApplicationName() {
  return $.NSWorkspace.sharedWorkspace.activeApplication
      .objectForKey('NSApplicationName')
      .UTF8String;
}

function parseArgs(args) {
  var screenIndex = parseInt(args[0]);
  args = args.substr(1);

  var frame = getWindowFrame(screenIndex);

  var xratio = 1;
  var xpos_s = 0;
  var yratio = 1;
  var ypos_s = 0;

  if (args) {
    xratio = parseInt(args[0]);
    args = args.substr(1);
  }
  if (args) {
    xpos_s = parseInt(args[0]);
    args = args.substr(1);
  }
  var xpos_e = xpos_s;
  if (args && args[0] === '-') {
    xpos_e = parseInt(args[1]);
    args = args.substr(2);
  }

  if (args) {
    yratio = parseInt(args[0]);
    args = args.substr(1);
  }
  if (args) {
    ypos_s = parseInt(args[0]);
    args = args.substr(1);
  }
  var ypos_e = ypos_s;
  if (args && args[0] === '-') {
    ypos_e = parseInt(args[1]);
    args = args.substr(2);
  }

  var x = frame.origin.x;
  var y = frame.origin.y;
  var oneWidth = (frame.size.width / xratio);
  var oneHeight = (frame.size.height / yratio);

  return {
     x: x + oneWidth * xpos_s,
     y: y + oneHeight * ypos_s,
     width: oneWidth * (xpos_e - xpos_s + 1),
     height: oneHeight * (ypos_e - ypos_s + 1),
  }
}

function run(args) {
  var newBounds = parseArgs(args[0]);
  if (newBounds.width > 5 && newBounds.height > 5) {
    Application(getFrontmostApplicationName()).windows[0].bounds = newBounds;
  }
}
